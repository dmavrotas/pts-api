buildscript {
	repositories {
		// NOTE: You should declare only repositories that you need here
		mavenLocal()
		mavenCentral()
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
	id 'maven'
	id 'idea'
	id 'eclipse'
	id 'war'
}

group = 'com.dmavrotas'
archivesBaseName = 'pts-api'
sourceCompatibility = '11'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
}

repositories {
	mavenLocal()
	mavenCentral()
}

configurations{
	// from spring-boot-starter-data-jpa
	compile.exclude group: "com.zaxxer", module: "HikariCP"
}

dependencies {
	// Swagger config
	compile("io.springfox:springfox-swagger2:${springfox_swagger2_version}")
	compile("io.springfox:springfox-swagger-ui:${springfox_swagger2_version}")
	compile("org.springframework.boot:spring-boot-starter-web:${spring_boot_version}")
	compile("org.springframework.boot:spring-boot-starter-data-jpa:${spring_boot_version}")
	// to have the jdbc pooler
	compile("org.apache.tomcat:tomcat-jdbc:${tomcat_jdbc_version}")
	compile("org.apache.commons:commons-lang3:${commons_lang3_version}")
	compile("org.apache.commons:commons-collections4:${commons_collections4_version}")
	// for mysql
	runtime("mysql:mysql-connector-java:${mysql_connector_java_version}")
	// spring boot framework testing
	testCompile("org.springframework.boot:spring-boot-starter-test:${spring_boot_version}")
	// for embedded mysql
	testCompile("org.springframework.boot:spring-boot-starter-jdbc:${spring_boot_version}")
	// for hsql database
	testCompile("org.hsqldb:hsqldb:${hsqldb_version}")
	// junit framework
	testCompile("org.junit.jupiter:junit-jupiter:${junit_jupiter_version}")
	// Matchers
	testCompile("org.hamcrest:hamcrest:${hamcrest_version}")
	// override mockito-core from spring-boot-starter-test
	testCompile("org.mockito:mockito-core:${mockito_core_version}")
}

test {
	systemProperty "file.encoding", "utf-8"
	// to tell gradle to launch junit5
	useJUnitPlatform()
}

/**
 * Coverage
 */
jacocoTestReport {
	reports {
		xml.enabled = true
		html.enabled = true
	}
}

// jacocoTestReport is an independant task, so we need to include it in the build automaticcaly
check.dependsOn(jacocoTestReport)
// war should be created only when tests are ok
bootWar.dependsOn(test)
